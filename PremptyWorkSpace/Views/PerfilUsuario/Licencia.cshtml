@model PagedList.IPagedList<PremptyWorkSpace.Models.LicenciaViewModel>
@using PagedList.Mvc;


@{
    ViewBag.Title = "Mis Licencias";
    Layout = "~/Views/_LayoutPage1.cshtml";
}

<div class="subnavbar">
    <div class="subnavbar-inner">
        <div class="container">
            <ul class="mainnav">
                <li><a href="~/PerfilUsuario/Horas"><i class="shortcut-icon icon-time"></i><span>Control de Horas</span> </a></li>
                <li><a href="~/PerfilUsuario/Perfil"><i class="shortcut-icon icon-pencil"></i><span>Perfil</span> </a></li>
                <li class="active"><a href="~/PerfilUsuario/Licencia"><i class="shortcut-icon   icon-list-alt"></i><span>Solicitar Licencia</span> </a></li>
                <li><a href="~/PerfilUsuario/Novedades"><i class="shortcut-icon icon-bookmark"></i><span>Novedades</span> </a></li>
            </ul>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="span12">
            <div class="nav pull-left">
                <a href="~/PerfilUsuario/SolicitarLicencia">
                    <input type="button" value="Solicitar Licencia" class="btn btn-danger ingresar" /></a>
            </div>
            <div id="target-1" class="widget">
                <div class="widget widget-table action-table">
                    <div class="widget-header">
                        <i class="icon-th-list"></i>
                        <h3>Mis Licencias</h3>
                        <div class="dbuscar">
                            @using (Html.BeginForm())
                            {                                    
                                @Html.TextBox("SearchString")
                                <input type="submit" value="Buscar" class="btn-danger ingresar" />
                                    
                            }
                        </div>
                    </div>
                    <div class="widget-content">

                        <table class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>Fecha
                                    </th>

                                    <th>Motivo
                                    </th>
                                    <th>Descripcion
                                    </th>
                                    <th>Estado
                                    </th>
                                </tr>
                            </thead>

                            @foreach (var item in Model)
                            {                  
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Fecha)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Motivo)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Descripcion)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Estado)
                                    </td>
                                </tr>
                            }
                        </table>
                        <div class="dbuscar">
                            Pagina @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
                            de @Model.PageCount
                            &nbsp; 
    @if (Model.HasPreviousPage)
    { 
        @Html.ActionLink("<<", "Licencia", new
   {
       page = 1,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       SearchString = ViewBag.SearchString
   })

        @Html.Raw("&nbsp;"); 
        @Html.ActionLink("< Anterior", "Licencia", new
   {
       page = Model.PageNumber - 1,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       SearchString = ViewBag.SearchString
   })
    }
    else
    { 
        @:<< 
        @Html.Raw("&nbsp;"); 
        @:< Prev 
    }
                            &nbsp; 
    @if (Model.HasNextPage)
    { 
        @Html.ActionLink("Próximo >", "Licencia", new
   {
       page = Model.PageNumber + 1,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       SearchString = ViewBag.SearchString
   })

        @Html.Raw("&nbsp;"); 
        @Html.ActionLink(">>", "Licencia", new
   {
       page = Model.PageCount,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       SearchString = ViewBag.SearchString
   })
    }
    else
    { 
        @:Next > 
        @Html.Raw("&nbsp;") 
        @:>> 
    }
                        </div>


                    </div>
                </div>

            </div>
        </div>
    </div>
</div>



